// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface ArticleDetail {
    state: State;
}

export interface State {
    user: User;
    deepLink: DeepLink;
    article: StateArticle;
    header: Header;
    transactionPrice: TransactionPrice;
    articleFacilities: ArticleFacilities;
    aside: Aside;
    notification: Notification;
    modal: Modal;
    interest: Interest;
    apply: Apply;
    aroundStationDevelopmentPlan: any[];
    aroundJiguDevelopmentPlan: any[];
    complexInnerFacility: ComplexInnerFacility;
    mediaViewer: MediaViewer;
    banner: Banner;
    articleScroll: ArticleScroll;
    myHouse: MyHouse;
    searchAddress: SearchAddress;
    myHouseRegister: { [key: string]: boolean | null };
    myHousePrivacy: MyHousePrivacy;
}

export interface Apply {
    resultCode: number;
    apId: number;
    expectGuaranteeInfo: ExpectGuaranteeInfo;
    error: Error;
}

export interface Error {
    code: string;
    message: string;
}

export interface ExpectGuaranteeInfo {}

export interface StateArticle {
    article: ArticleArticle;
    addition: Addition;
    noneHscp: ExpectGuaranteeInfo;
    space: Space;
    facility: Facility;
    floor: Floor;
    price: Price;
    ground: ExpectGuaranteeInfo;
    rebuild: ExpectGuaranteeInfo;
    oneroom: Oneroom;
    redevelop: ExpectGuaranteeInfo;
    buildingRegister: ExpectGuaranteeInfo;
    articlePhotos: ArticlePhoto[];
    marketPrice: MarketPrice;
    articleTax: { [key: string]: number };
    landPrice: LandPrice;
    tabCategory: string;
    schools: School[];
    realtor: Realtor;
    location: Location;
    isValidArticle: boolean;
    maintenanceCost: ExpectGuaranteeInfo;
    articleTitle: string;
    articleSubTitle: string;
    articleHeaderSubTitle: string;
    dealerTelInfo: { [key: string]: string };
}

export interface Addition {
    articleNo: string;
    articleName: string;
    articleStatus: string;
    realEstateTypeCode: string;
    realEstateTypeName: string;
    articleRealEstateTypeCode: string;
    articleRealEstateTypeName: string;
    tradeTypeCode: string;
    tradeTypeName: string;
    verificationTypeCode: string;
    floorInfo: string;
    priceChangeState: string;
    isPriceModification: boolean;
    dealOrWarrantPrc: string;
    areaName: string;
    area1: number;
    area2: number;
    direction: string;
    articleConfirmYmd: string;
    siteImageCount: number;
    articleFeatureDesc: string;
    tagList: string[];
    buildingName: string;
    sameAddrCnt: number;
    sameAddrDirectCnt: number;
    sameAddrMaxPrc: string;
    sameAddrMinPrc: string;
    cpid: string;
    cpName: string;
    cpPcArticleLinkUseAtArticleTitleYn: boolean;
    cpPcArticleLinkUseAtCpNameYn: boolean;
    cpMobileArticleLinkUseAtArticleTitleYn: boolean;
    cpMobileArticleLinkUseAtCpNameYn: boolean;
    latitude: string;
    longitude: string;
    isLocationShow: boolean;
    realtorName: string;
    realtorId: string;
    tradeCheckedByOwner: boolean;
    isDirectTrade: boolean;
    isInterest: boolean;
    isComplex: boolean;
}

export interface ArticleArticle {
    articleNo: string;
    articleName: string;
    articleSubName: string;
    cpId: string;
    cortarNo: string;
    hscpNo: string;
    ptpNo: string;
    ptpName: string;
    tradeBuildingTypeCode: string;
    exposeStartYMD: string;
    exposeEndYMD: string;
    buildNo: string;
    articleConfirmYMD: string;
    tradeCompleteYN: string;
    aptName: string;
    aptHeatMethodTypeName: string;
    aptHeatFuelTypeName: string;
    aptParkingCount: string;
    aptParkingCountPerHousehold: string;
    aptHouseholdCount: string;
    aptConstructionCompanyName: string;
    aptUseApproveYmd: string;
    isaleDealRestrictionCode: string;
    totalDongCount: number;
    articleStatusCode: string;
    articleTypeCode: string;
    realestateTypeCode: string;
    realestateTypeName: string;
    tradeTypeCode: string;
    tradeTypeName: string;
    verificationTypeCode: string;
    applyYN: string;
    directTradeYN: string;
    mapLocationIndicationYn: string;
    latitude: string;
    longitude: string;
    cityNo: string;
    cityName: string;
    divisionName: string;
    sectionName: string;
    householdCountByPtp: string;
    realtorId: string;
    walkingTimeToNearSubway: number;
    complexGrandPlanList: { [key: string]: string }[];
    roomNumber: string;
    detailAddress: string;
    exposureAddress: string;
    roomCount: string;
    bathroomCount: string;
    moveInTypeCode: string;
    moveInTypeName: string;
    moveInPossibleYmd: string;
    monthlyManagementCost: number;
    originBuildingName: string;
    buildingName: string;
    articleFeatureDescription: string;
    parkingCount: number;
    parkingPerHouseholdCount: string;
    parkingPossibleYN: string;
    duplexYN: string;
    floorLayerName: string;
    hasBuildingUnitInfo: boolean;
    principalUse: string;
    tagList: string[];
    isInterest: boolean;
    isFalseHoodDeclared: boolean;
    isBlockFalseHood: boolean;
    detailAddressYn: string;
    isComplex: boolean;
    isOwnerTradeCompleted: boolean;
}

export interface ArticlePhoto {
    imageKey: string;
    imageSrc: string;
    imageId: string;
    newOldGbn: NewOldGbn;
    smallCategoryName: string;
    explaination: string;
    registYmdt: string;
    imageOrder: number;
}

export enum NewOldGbn {
    New = 'NEW',
}

export interface Facility {
    directionTypeCode: string;
    directionTypeName: string;
    directionBaseTypeCode: string;
    directionBaseTypeName: string;
    usageTypeCode: string;
    usageTypeName: string;
    floorAreaRatio: string;
    buildingCoverageRatio: string;
}

export interface Floor {
    totalFloorCount: string;
    undergroundFloorCount: string;
    uppergroundFloorCount: string;
    floorTypeCode: string;
    floorInputMethodCode: string;
    correspondingFloorCount: string;
}

export interface LandPrice {
    hscpNo: string;
    hscpType: string;
    hscpNm: string;
    bildNo: string;
    dongNm: string;
    hoNm: string;
    hoFloor: string;
    lineNo: string;
    pilotiYn: string;
    existHo: string;
    price: string;
    prevPrice: string;
    ptpNo: string;
    supplyArea: string;
    totalArea: string;
    stdYear: number;
    stdYmd: number;
}

export interface Location {
    cityName: string;
    divisionName: string;
    sectionName: string;
    detailAddress: string;
    complexLocation: ComplexLocation;
}

export interface ComplexLocation {
    detailAddress: string;
    complexOfficerTelNo: string;
    repComplexOfficerTelNo: string;
}

export interface MarketPrice {
    dealAveragePrice: number;
    dealUpperLimitPrice: number;
    dealLowerLimitPrice: number;
    leaseAveragePrice: number;
    leaseUpperLimitPrice: number;
    leaseLowerLimitPrice: number;
    deposit: number;
    monthlyRentMaxPrice: number;
    monthlyRentMinPrice: number;
    provider: string;
}

export interface Oneroom {
    buildingType: string;
    roomType: string;
    roofTopYN: string;
}

export interface Price {
    rentPrice: number;
    dealPrice: number;
    warrantPrice: number;
    allWarrantPrice: number;
    financeTypeCode: string;
    financePrice: number;
    premiumPrice: number;
    isalePrice: number;
    allRentPrice: number;
    priceBySpace: number;
    bondPrice: number;
    middlePayment: number;
}

export interface Realtor {
    realtorId: string;
    realtorName: string;
    representativeName: string;
    address: string;
    establishRegistrationNo: string;
    profileImageUrl: string;
    profileFullImageUrl: string;
    representativeTelNo: string;
    cellPhoneNo: string;
    isCellPhoneExposure: boolean;
    isRepresentativeTelExposure: boolean;
    exposeTelTypeCode: string;
}

export interface School {
    walkTime: number;
    schoolCode: string;
    schoolName: string;
    organizationType: string;
    studentCountPerTeacher: number;
    studentCountPerClassroom: number;
    maleStudentCount: number;
    femaleStudentCount: number;
    maleTeacherCount: number;
    femaleTeacherCount: number;
    firstYearClassroomCount: number;
    secondYearClassroomCount: number;
    thirdYearClassroomCount: number;
    fourthYearClassroomCount: number;
    fifthYearClassroomCount: number;
    sixthYearClassroomCount: number;
    firstYearStudentCount: number;
    secondYearStudentCount: number;
    thirdYearStudentCount: number;
    fourthYearStudentCount: number;
    fifthYearStudentCount: number;
    sixthYearStudentCount: number;
    specialClassroomCount: number;
    specialClassroomStudentCount: number;
    totalClassroomCount: number;
    totalStudentCount: number;
    maleEmployeeCount: number;
    femaleEmployeeCount: number;
    innerCounselorCount: number;
    outerCounselorCount: number;
    afterSchoolProgramCount: number;
    afterSchoolStudentCount: number;
    libraryBookCount: number;
    libraryBookCountPerPerson: number;
    mealServicePricePerStudent: number;
    mealServiceSupportStudentCount: number;
    mealServiceYearlySupportAmount: number;
    averageStudentCountPerClassroomOnCity: number;
    averageStudentCountPerTeacherOnCity: number;
    averageStudentCountPerClassroomOnDivision: number;
    averageStudentCountPerTeacherOnDivision: number;
}

export interface Space {
    supplySpace: number;
    exclusiveSpace: number;
    groundSpace: number;
    totalSpace: number;
    buildingSpace: number;
    expectSpace: number;
    groundShareSpace: number;
    exclusiveRate: string;
}

export interface ArticleFacilities {
    nearBusRoute: any[];
    busCount: number;
    nearSubwayRoute: any[];
    subwayCount: number;
    nearFacility: any[];
    hotPlaceList: any[];
    complexFacility: any[];
    complexReport: ExpectGuaranteeInfo;
}

export interface ArticleScroll {
    height: string;
}

export interface Aside {
    opened: boolean;
    userId: null;
    userNickName: null;
    userEmail: null;
    notificationCount: null;
    interestAreaCount: null;
    interestComplexCount: null;
    interestArticleCount: null;
    myhouseCount: null;
}

export interface Banner {
    homeBanner: ExpectGuaranteeInfo;
}

export interface ComplexInnerFacility {
    focused: boolean;
}

export interface DeepLink {
    zoom: number;
    centerLat: number;
    centerLon: number;
    articleNoDeepLink: string;
}

export interface Header {
    name: string;
    subName: string;
    isSubHeaderToolHidden: boolean;
}

export interface Interest {
    isInterest: null;
    errorCode: null;
    errorCount: number;
}

export interface MediaViewer {
    index: number;
    mediaType: string;
}

export interface Modal {
    modalType: string;
    className: string;
    message: null;
}

export interface MyHouse {
    myHouseList: any[];
    editedMyHouseList: any[];
    realPriceInfo: RealPriceInfo;
    realPriceTable: RealPriceTable;
    priceInfo: PriceInfo;
    priceChart: PriceChart;
    articles: Articles;
}

export interface Articles {
    totalCount: number;
    articleList: any[];
}

export interface PriceChart {
    isExposeChart: boolean;
    floorList: any[];
    realPriceDataXList: any[];
    realPriceDataYList: any[];
    marketPriceXList: any[];
    upperMarketPriceYList: any[];
    lowerMarketPriceYList: any[];
    minAxisY: number;
    maxAxisY: number;
    gridYLines: any[];
    axisYTickValues: any[];
}

export interface PriceInfo {
    deal: Deal;
    lease: Deal;
    rent: Deal;
}

export interface Deal {
    upper: number;
    lower: number;
    deposit: number;
    leasePerDealRate: string;
    baseDate: string;
    cpName: string;
    exposeInfo: boolean;
}

export interface RealPriceInfo {
    exposeRealPrice: boolean;
}

export interface RealPriceTable {
    realPrices: any[];
    realPriceBasisDate: string;
    averageMonth: number;
    averagePrice: number;
}

export interface MyHousePrivacy {
    agreePrivacyCollectUsage: null;
    agreePrivacyDisclosure: null;
}

export interface Notification {
    modifyResponse: null;
    errorCode: null;
    errorCount: number;
}

export interface SearchAddress {
    query: string;
    deliveryAddressList: any[];
    searchAddressList: null;
    searchComplexList: null;
    addressList: any[];
    buildingList: any[];
    buildingLoad: boolean;
    hoList: any[];
    hoLoad: boolean;
    pyeongList: any[];
    pyeongLoad: boolean;
    exposureArea: null;
    abbreviationAddress: null;
    baseAddress: null;
    cortarNo: null;
    complexNo: null;
    complexName: null;
    realestateTypeCode: null;
    realestateTypeName: null;
    buildingName: null;
    buildingNo: null;
    hoName: null;
    hoNo: null;
    deliveryBuildingName: null;
    deliveryHoName: null;
}

export interface TransactionPrice {
    hscpNo: null;
    ptpNo: null;
    dealTransactionPrice: DealTransactionPriceClass;
    leaseTransactionPrice: DealTransactionPriceClass;
    rentTransactionPrice: DealTransactionPriceClass;
}

export interface DealTransactionPriceClass {
    tradeType: string;
    hasMore: null;
    basisYearMonth: null;
    list: any[];
}

export interface User {
    isLogin: boolean;
    isLandApp: boolean;
    isAdmin: boolean;
    isGroupId: boolean;
    userNickName: boolean;
    userOld: boolean;
    connectTime: number;
}
